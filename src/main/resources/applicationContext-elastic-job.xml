<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:reg="http://www.dangdang.com/schema/ddframe/reg"
    xmlns:job="http://www.dangdang.com/schema/ddframe/job"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.dangdang.com/schema/ddframe/reg
                        http://www.dangdang.com/schema/ddframe/reg/reg.xsd
                        http://www.dangdang.com/schema/ddframe/job
                        http://www.dangdang.com/schema/ddframe/job/job.xsd
                        ">
    <!--包扫描-->
    <context:component-scan base-package="com.uxin.springbootelasticjob.job" />
    <!--配置文件扫描-->
    <context:property-placeholder location="classpath:conf/*.properties" />

    <!--配置数据库中关于作业运行的log-->
    <bean id="elasticJobLog" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${spring.druid.datasource.driverClassName}"/>
        <property name="url" value="${spring.druid.datasource.url}"/>
        <property name="username" value="${spring.druid.datasource.username}"/>
        <property name="password" value="${spring.druid.datasource.password}"/>
    </bean>

    <!--配置作业注册中心 -->
    <reg:zookeeper id="regCenter"
                   server-lists="${serverLists}"
                   namespace="${namespace}"
                   base-sleep-time-milliseconds="${baseSleepTimeMilliseconds}"
                   max-sleep-time-milliseconds="${maxSleepTimeMilliseconds}"
                   max-retries="${maxRetries}" />

    <!-- 配置简单作业 1-->
    <!-- event-trace-rdb-data-source 配置带作业数据库事件追踪的简单作业-->
    <job:simple id="${simple.id}"
                class="${simple.class}"
                registry-center-ref="regCenter"
                sharding-total-count="${simple.shardingTotalCount}"
                cron="${simple.cron}"
                sharding-item-parameters="${simple.shardingItemParameters}"
                monitor-execution="${simple.monitorExecution}"
                monitor-port="${simple.monitorPort}"
                failover="${simple.failover}"
                description="${simple.description}"
                disabled="${simple.disabled}"
                overwrite="${simple.overwrite}"
                event-trace-rdb-data-source="elasticJobLog" />

    <!-- 配置带监听的简单作业 2-->
    <job:simple id="${simple2.id}"
                class="${simple2.class}"
                registry-center-ref="regCenter"
                sharding-total-count="${simple2.shardingTotalCount}"
                cron="${simple2.cron}"
                sharding-item-parameters="${simple2.shardingItemParameters}"
                monitor-execution="${simple2.monitorExecution}"
                monitor-port="${simple2.monitorPort}"
                failover="${simple2.failover}"
                description="${simple2.description}"
                disabled="${simple2.disabled}"
                overwrite="${simple2.overwrite}"
                event-trace-rdb-data-source="elasticJobLog">
        <!--&lt;!&ndash;配置本地监听器&ndash;&gt;-->
        <job:listener class="com.uxin.springbootelasticjob.listener.MyElasticJobListener"/>

        <!--&lt;!&ndash;配置分布式监听器&ndash;&gt;-->
        <job:distributed-listener class="com.uxin.springbootelasticjob.listener.MyDistributeOnceElasticJobListener"
                                  started-timeout-milliseconds="2000" completed-timeout-milliseconds="2000"/>
    </job:simple>

    <!-- 配置数据流作业-->
    <job:dataflow id="${dataflow.id}"
                  class="${dataflow.class}"
                  registry-center-ref="regCenter"
                  sharding-total-count="${dataflow.shardingTotalCount}"
                  cron="${dataflow.cron}"
                  sharding-item-parameters="${dataflow.shardingItemParameters}"
                  monitor-execution="${dataflow.monitorExecution}"
                  failover="${dataflow.failover}"
                  max-time-diff-seconds="${dataflow.maxTimeDiffSeconds}"
                  streaming-process="${dataflow.streamingProcess}"
                  description="${dataflow.description}"
                  disabled="${dataflow.disabled}"
                  overwrite="${dataflow.overwrite}" />
</beans>
